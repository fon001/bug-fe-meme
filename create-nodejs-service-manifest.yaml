apiVersion: apps/v1
kind: Deployment
metadata:
  # deployment name
  name: node-deployment
  labels:
    app: node
spec:
  # modify replicas according to your case
  replicas: 1
  selector:
    matchLabels:
      app: node

  revisionHistoryLimit: 14
  # deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 60
  progressDeadlineSeconds: 600

  # pod template
  template:
    metadata:
      labels:
        app: node
    spec:
      # pod contains 1 container
      containers:
      - name: node
        image: fonacregistry.azurecr.io/nodejs-server:latest
        resources:
          requests:  #request a Pod with  a minimum of 0.5 of a core and 128 MB of memory
            cpu: "500m"
            memory: "128Mi"
          limits:    #add a limit of 1.0 CPU and 256 MB of memory
            cpu: "1000m"   
            memory: "256Mi"
            
        livenessProbe:
          httpGet:
            path: /healthy
            port: 22137
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 22137
          periodSeconds: 2
          initialDelaySeconds: 30
          failureThreshold: 3
          successThreshold: 1

        # container opens port 22137
        ports:
        - containerPort: 22137
          name: http
          protocol: TCP            
---
apiVersion: v1
kind: Service
metadata:
  # The unique Service instance/name
  name: node-service
spec:
  # Add external load balancer
  # *Only supported by some cloud providers*
  type: LoadBalancer
  ports:
    - name: http
      port: 22137
      targetPort: 22137
  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: node
